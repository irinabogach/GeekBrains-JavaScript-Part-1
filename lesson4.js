// Задание 1. Функция минимального числа
var a = +prompt("Введите число а:");
var b = +prompt("Введите число b:");
function min(a, b) {
return (a < b) ? a : b;
}
console.log (min (a, b));

// Задание 2a. Подсчет количества символов 'B'
var str = prompt("Введите текст для поиска:"); //Ввод текста для поиска символа 'B'. Переменная глобальная, для использования еще где-то
function countBs (str) { //Объявление функции
  var charCount = str.length; //Переменная со значением, равным длине введенного текста
  var charBs = 0; //Счетчик искомого символа 'B'
  for (var i = 0; i < charCount; i++) { //Цикл итераций поиска посимвольно
    if (str.charAt(i) == 'B') { //Условие совпадения искомого символа
      charBs++; } //Увеличение счетчика искомого символа 'B'
      }
  return (charBs); //Вывод количества вхождений искомого символа
}
countBs (str); //Вызов функции

// Задание 2b. Подсчет количества введенного пользователем символа
var str = prompt("Введите текст для поиска:"); //Ввод текста для поиска. Переменная глобальная, для использования еще где-то в программе
var char = prompt("Введите символ для поиска в тексте:"); //Ввод символа для поиска.Переменная глобальная, для использования еще где-то
function countChar (str, char) { //Объявление функции
  var charsCounter = str.length; //Переменная со значением, равным длине введенного текста
  var charCount = 0; //Счетчик искомого символа
  for (var i = 0; i < charsCounter; i++) { //Цикл итераций поиска посимвольно
    if (str.charAt(i) == char) { //Условие совпадения искомого символа
      charCount++; } //Увеличение счетчика искомого символа
      }
  return (charCount); //Вывод количества вхождений искомого символа
}
countChar (str, char); //Вызов функции

// Задание 3. Проверка четности введенного числа рекурсивно
var n = +prompt ("Введите число для проверки четности:"); //Ввод числа для проверки четности
if (n < 0) { //Проверка введенного числа на знак
  n = n * (-1); //Если число отрицательное - меняем знак (домножаем на -1)
};
function isEven(n) { //Объявление функции
if (n == 0 || n == 1) { //Условие ИЛИ для дальнейшей проверки (в таком виде срабатывает для любых введенных чисел (по знаку)
    if (n == 0) { //Условие четности
      return true; //Число четное
    } else if (n == 1) { //Условие нечетности
      return false; //Число нечетное
    }
    }
    return isEven (n-2); //Рекурсивный вызов функции с аргументом (n-2). В случае ввода отрицательных чисел возникает переполнение стека,
}                      //так как не будет достигнуто значение ни 0, ни 1. Необходима проверка на знак. Если '-' - домножить на -1.
isEven(n); //Вызов функции
